
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.io.File;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */
public class NewJFrame extends javax.swing.JFrame {
    private class TimeCounter extends Thread
    {
        int count = 0;       
        @Override
        public void run() {
            
            while (true) {                
                count++;
                if(!isWin)
                    lbTime.setText(count+"");
                try {
                    sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }
    int size = 3;
    int row,col;
    GridLayout layout;
    boolean isWin;
    //Array of JButton
    Component[] arr;
    JFileChooser fc = new JFileChooser();
    File open;
    //flag variable indicates whether programe is shuffling
    //if true, checkWin() shouldn't work
    boolean shuffling;
    final String[] ARROWS = {"left", "up", "right", "down"};
    TimeCounter time;
    public NewJFrame() {
        initComponents();
        layout = (GridLayout) panel.getLayout();
        start();
        isWin = false;
        time = new TimeCounter();
        time.start();
    }
    private void start()
    {
        panel.removeAll();
        panel.requestFocusInWindow();//to get event key pressed
        //reset position of blank square
        col = size-1; row = size-1;
        
        //set up layout 
        layout.setColumns(size);
        layout.setRows(0);
        
        ArrayList<Icon> icons = Util.getImages(80,open);
        
        //add components        
        for(int i = 1; i < size*size; i++)
        {
            JLabel label = new JLabel(i+"",icons.get(i-1),0);
            label.setForeground(label.getBackground());
            label.setFont(new Font("Arial", 0, 0));

            panel.add(label);
        }
        panel.add(new JLabel());
        
        //update UI and shuffle
        arr = panel.getComponents();
        panel.updateUI();       
        shuffle();
    }
    private void shuffle()
    {
        //move the blank square around randomly 10 times
        //its original position is top left (0,0)
        shuffling = true;
        for(int i = 0; i < 20; i++)
        {
            int random = (int) (Math.random()*4);
            move(ARROWS[random]);
        }
        shuffling = false;
    }
    private boolean checkWin()
    {              
        for(int i =0; i < arr.length-1; i++)
        {
            //check if each button text is equal its postion + 1
            JLabel btn = (JLabel) arr[i];            
            if(!btn.getText().equals( (i+1) + ""))
            {                
                return false;                 
            }
               
        }        
        return true;        
    }
    //move blank square
    private void move(String arrow)
    {
        {
            int pos = row*size + col;
            switch(arrow)
            {
                case "up":
                    if(row > 0)row--;
                    break;
                case "down":
                    if(row < size -1)row++;
                    break;
                case "left":
                    if(col > 0 )col--;
                    break;
                case "right":
                    if(col < size -1) col++;
                    break;
            }
            int nextPos = row*size + col;
            JLabel nextBtn = (JLabel) arr[nextPos];
            JLabel btn = (JLabel) arr[pos];
            btn.setIcon(nextBtn.getIcon());
            btn.setText(nextBtn.getText());
            nextBtn.setIcon(null);
            nextBtn.setText(" ");
        }
        isWin = checkWin();
        if(isWin && !shuffling){           
            JOptionPane.showMessageDialog(this, "You won");            
        }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbSize = new javax.swing.JComboBox<>();
        btnStart = new javax.swing.JButton();
        lbTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelKeyPressed(evt);
            }
        });
        panel.setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 5));

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });
        jPanel1.add(btnBrowse);

        jLabel1.setText("Size");
        jPanel1.add(jLabel1);

        cbSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3x3", "4x4" }));
        cbSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSizeActionPerformed(evt);
            }
        });
        jPanel1.add(cbSize);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        jPanel1.add(btnStart);

        lbTime.setText("0");
        jPanel1.add(lbTime);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSizeActionPerformed
        // TODO add your handling code here:
        int index = cbSize.getSelectedIndex();
        if(index == 0) 
            size = 3;
        else 
            size = 4;
    }//GEN-LAST:event_cbSizeActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        time.count = 0;
        start();
    }//GEN-LAST:event_btnStartActionPerformed

    private void panelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelKeyPressed
        // TODO add your handling code here:
        int cc = evt.getKeyCode();
        if(cc >= 37 && cc <= 40)
            move(ARROWS[cc-37]);
    }//GEN-LAST:event_panelKeyPressed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        // TODO add your handling code here:
        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                open = fc.getSelectedFile();
            }
    }//GEN-LAST:event_btnBrowseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJFrame frame = new NewJFrame();
                frame.setVisible(true);
                frame.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnStart;
    private javax.swing.JComboBox<String> cbSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbTime;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables
}
